(defvar total)
(defvar m)
(defun horner(x lista)
    (setf total 0)
    (setf e (- (length lista) 1))
    (loop
    for c in lista
    do
        (setf m 1)
        (dotimes (i e)
            (setf m (* m x))
        )
        (setf m (* c m))
        (setf total (+ total m))
        (setf e (- e 1))
    )
    (format t "~%Resultado : ~a" total)
)

(format t "El grado del Polinomio: ")
(defvar n (+ (read) 1))
(format t "~%Ingrese los coeficientes de la funcion:~%")
(defvar funcion nil)
(setf e (- n 1))
(dotimes (i n)
    (format t "x^~a : " e)
    (setf e (- e 1))
    (setq c (read))
    (setq funcion (cons c funcion))
)
(setf funcion (reverse funcion))
(setf e (- (length funcion) 1))
(dotimes (i n)
    (setf c (nth i funcion))
    (format t "+ ~a" c)
    (format t "x^~a " e)
    (setf e (- e 1))
)
(format t "~%Ingrese el valor de x: ")
(setf x (read))

(horner x funcion)