(defvar var 0)
(defvar listaf nil)
(defun asocia-cuadrados (lista)
    (setf var 0)
    (setf listaf nil)
    (loop 
        for xi in lista until (not (numberp xi))
        do
        (setf var (+ var 1))
        (setf xy (list xi (* xi xi)))
        (setf listaf (cons xy listaf))
    )    
    (setf listaf (reverse listaf))
    (if (= var (length lista))
        (format t "~%(x , x^2):  ~a" listaf)
        (print "~%La lista debe contener numeros.")
    )
)

(format t "Cuantos elementos tiene su lista?: ")
(defvar n (read))
(format t "~%Ingrese los elementos de la lista:~%")
(defvar lista nil)
(defvar e)
(dotimes (i n)
    (format t "Elemento de la lista:")
    (setq e (read))
    (setq lista (cons e lista))
)
(setf lista (reverse lista))
(format t "~%Lista: ~a" lista)

(asocia-cuadrados lista)
